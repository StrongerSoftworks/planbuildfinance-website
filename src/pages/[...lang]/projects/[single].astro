---
import Gallery from "@/components/Gallery.astro";
import ImageMod from "@/components/ImageMod.astro";
import QuickContact from "@/components/QuickContact.astro";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { getTranslations, supportedLang } from "@/lib/utils/languageParser";
import { markdownify } from "@/lib/utils/textConverter";
import PageHeader from "@/partials/PageHeader.astro";
import type { ContentEntryMap } from "astro:content";
import { render } from "astro:content";

export async function getStaticPaths() {
  const paths = await Promise.all(
    supportedLang.map(async (lang) => {
      const projects = await getSinglePage(
        "projects",
        lang as keyof ContentEntryMap
      );

      return projects.map((project) => ({
        params: {
          lang: lang || undefined,
          single: project.id.split("/").pop(),
        },
        props: {
          project,
        },
      }));
    })
  );
  return paths.flat();
}

const { project } = Astro.props;
const { lang } = Astro.params;

const { title, meta_title, description, image, client, category, slide_show } =
  project.data;

const { Content } = await render(project);

const { client: Tclient, category: Tcategory } = await getTranslations(
  lang as keyof ContentEntryMap
);
---

<Base
  title={title}
  meta_title={meta_title}
  description={description}
  image={image}
>
  {!image && <PageHeader {...project.data} />}
  <section class="section">
    <div class="container">
      <div class="row justify-center">
        <div class="col-10 lg:col-8">
          {
            image && (
              <ImageMod
                src={image}
                class="mb-12 w-full"
                width={1000}
                height={900}
                alt={title}
              />
            )
          }

          {
            slide_show && (
              <section class="section pt-0">
                <Gallery images={slide_show} />
              </section>
            )
          }

          <div>
            <div class="content mt-12">
              <Content />
            </div>
          </div>
        </div>

        <div class="col-10 lg:col-4">
          <div class="bg-secondary p-8">
            <div class="row">
              {
                client && (
                  <div class="col-6 mb-4 md:mb-0">
                    <div class="md:border-r border-border/20 ml-4">
                      <h5 class="text-white text-uppercase mb-2 h6">
                        {Tclient}
                      </h5>

                      <span
                        class="text-light/80"
                        set:html={markdownify(client)}
                      />
                    </div>
                  </div>
                )
              }

              <div class="col-6 mb-4 md:mb-0">
                <div class="ml-4">
                  <h5 class="text-white text-uppercase mb-2 h6">
                    {Tcategory}
                  </h5>
                  {
                    category && (
                      <span
                        class="text-light/80"
                        set:html={markdownify(category)}
                      />
                    )
                  }
                </div>
              </div>
            </div>
          </div>
          <QuickContact />
        </div>
      </div>
    </div>
  </section>
</Base>
