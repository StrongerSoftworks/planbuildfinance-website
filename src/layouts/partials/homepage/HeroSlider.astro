---
import ImageMod from "@/components/ImageMod.astro";
import config from "@/config/config.json";
import { getLangFromUrl, slugSelector } from "@/lib/utils/languageParser";
import { markdownify } from "@/lib/utils/textConverter";

const { heroSlider } = Astro.props;
let lang = getLangFromUrl(Astro.url);

const {
  logo_width,
  logo_height,
}: {
  logo_width: any;
  logo_height: any;
} = config.site;
---

{
  heroSlider?.enable && (
    <section class="section pt-0">
      <div class="banner-slider relative">
        {heroSlider.slider_item.map(
          (slider: {
            bg_image: string;
            title: string;
            subtitle: string;
            content: string;
            button: { enable: boolean; label: string; link: string };
          }) => (
            <div class="swiper-slide relative">
              <div class="relative h-[600px]">
                <div
                  class="absolute inset-0 bg-cover bg-center"
                  style={{
                    backgroundImage: `url(${slider.bg_image})`,
                  }}
                />
              </div>
              <div class="bg-light p-5 mb-10 flex flex-col items-center box-shadow">
                <ImageMod
                  src="/images/logo.png"
                  class={`inline-block`}
                  width={logo_width.replace("px", "") * 4}
                  height={logo_height.replace("px", "") * 4}
                  alt={slider.title}
                  format="webp"
                  loading={"eager"}
                />
                <h1
                  class="mt-8 text-4xl sm:text-5xl md:text-6xl lg:text-7xl uppercase font-normal"
                  set:html={markdownify(slider.title ?? "")}
                />
                <h2
                  class="mb-6 text-xl sm:text-3xl md:text-4xl uppercase font-normal tracking-[0.25em]"
                  set:html={markdownify(slider.subtitle ?? "")}
                />
                <p
                  class="mb-5 lg:mb-9 lg:text-lg xl:max-w-[700px] leading-7 font-light"
                  set:html={markdownify(slider.content ?? "")}
                />
                {slider.button && slider.button.enable && (
                  <a
                    class="btn btn-outline-primary"
                    href={slugSelector(slider.button.link, lang)}
                  >
                    <span>{slider.button.label}</span>
                  </a>
                )}
              </div>
            </div>
          )
        )}
      </div>
    </section>
  )
}
